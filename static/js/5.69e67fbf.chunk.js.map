{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","ingredient","push","name","amount","ingredientOutput","map","style","testTransform","display","margin","border","padding","key","className","price","toFixed","Orders","this","onFetchOrders","token","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"+LA+BeA,G,OA5BD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAcF,EAAMC,YACxBA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAGlC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAL,GACrC,OAAO,0BACPM,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OACbC,IAAKZ,EAAWE,MAAOF,EAAWE,KAP3B,MAOoCF,EAAWG,OAP/C,QAUX,OACI,yBAAKU,UAAU,SACX,2CAAiBT,GACjB,qCAAU,uCAAaN,EAAMgB,MAAMC,QAAQ,Q,wCCjBjDC,E,kLAGEC,KAAKnB,MAAMoB,cAAcD,KAAKnB,MAAMqB,S,+BAKpC,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATIJ,KAAKnB,MAAMwB,UACXF,EAAUH,KAAKnB,MAAMsB,OAAOf,KAAI,SAAAR,GAAK,OACjC,kBAAC,EAAD,CACAe,IAAKf,EAAM0B,GACXxB,YAAaF,EAAME,YACnBe,MAAOjB,EAAMiB,YAKjB,6BACKM,O,GApBII,aAyCNC,uBAdS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAM7B,MAAMuB,OACpBE,QAASI,EAAM7B,MAAMyB,QACrBH,MAAOO,EAAMC,KAAKR,UAIC,SAAAS,GACvB,MAAO,CACHV,cAAe,SAACC,GAAD,OAAWS,EAASC,IAAoBV,QAIhDM,CAA4CK,YAAiBd,EAAOe","file":"static/js/5.69e67fbf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Order.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    for(let ingredient in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredient,\r\n            amount: props.ingredients[ingredient]})\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ingredient => {\r\n        return <span \r\n        style={{\r\n            testTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid #ccc',\r\n            padding: '5px'}}\r\n        key={ingredient.name}>{ingredient.name}  ({ingredient.amount})</span>;\r\n    });\r\n\r\n    return(\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default order;","import React,{ Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component{\r\n\r\n     componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token);    \r\n     }\r\n\r\n    render(){\r\n\r\n        let orders = <Spinner/>;\r\n        if(!this.props.loading){\r\n            orders = (this.props.orders.map(order => (\r\n                <Order \r\n                key={order.id}\r\n                ingredients={order.ingredients}\r\n                price={order.price}/>\r\n            )));\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}