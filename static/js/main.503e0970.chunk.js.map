{"version":3,"sources":["assets/images/burger.png","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","style","height","src","burger","alt","navigationItem","to","link","exact","activeClassName","navigationItems","backdrop","show","onClick","clicked","sideDrawer","attachedClasses","open","closed","join","drawerToggle","toolbar","drawerToggleClicked","layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHanlder","this","Component","BurgerIngredient","ingredient","type","transformedIngredients","Object","keys","ingredients","map","ingredKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","modal","modalClosed","transform","opacity","button","fullClassname","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","eject","message","BurgerBuilder","currentlyPurchasing","loading","purchaseHanlder","purchaseCancelHandler","purchaseContinueHanlder","history","push","sum","disabledInfo","ingred","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSummary","connect","totalPrice","dispatch","name","ingredientName","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","placeholder","validation","required","valid","street","zip","pattern","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElement","order","orderData","post","then","catch","inputChangedHandler","identifier","updatedForm","updatedElement","target","checkValidity","inputIdentifier","rule","isValid","trim","id","config","form","onSubmit","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","amount","ingredientOutput","testTransform","display","border","padding","orders","get","data","App","Orders","Boolean","window","location","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,oC,wjBCK5BC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,yBCQdC,G,MAPF,SAACF,GAAD,OACT,yBAAKG,UAAU,OAAOC,MAAO,CAACC,OAAQL,EAAMK,SACxC,yBAAKC,IAAKC,IAAQC,IAAI,qB,gBCSfC,G,MAXQ,SAACT,GAAD,OACnB,wBAAIG,UAAU,kBACV,kBAAC,IAAD,CACIO,GAAIV,EAAMW,KACVC,OAAK,EACLC,gBAAgB,UAAUb,EAAMC,aCG7Ba,EARS,SAACd,GAAD,OACpB,wBAAIG,UAAU,mBACV,kBAAC,EAAD,CAAgBQ,KAAK,KAArB,kBACA,kBAAC,EAAD,CAAgBA,KAAK,WAArB,YCAOI,G,YAJE,SAACf,GAAD,OACbA,EAAMgB,KAAO,yBAAKb,UAAU,WAAWc,QAASjB,EAAMkB,UAAkB,OCsB7DC,EApBI,SAACnB,GAChB,IAAIoB,EAAkB,CAAC,aAAa,UAKpC,OAJGpB,EAAMqB,OACLD,EAAkB,CAAC,aAAa,SAIhC,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAUJ,KAAMhB,EAAMqB,KAAMH,QAASlB,EAAMsB,SAC3C,yBAAKnB,UAAWiB,EAAgBG,KAAK,MACjC,kBAAC,EAAD,CAAMlB,OAAO,QACb,6BACI,kBAAC,EAAD,UCLDmB,G,YAVM,SAACxB,GAAD,OACjB,yBACAG,UAAU,eACVc,QAASjB,EAAMkB,SACX,8BACA,8BACA,iCCQOO,EAXC,SAACzB,GAAD,OACZ,4BAAQG,UAAU,WACd,kBAAC,EAAD,CAAce,QAASlB,EAAM0B,sBAC7B,kBAAC,EAAD,CAAMrB,OAAO,QACb,yBAAKF,UAAU,eACX,kBAAC,EAAD,SCyBGwB,E,4MA7BXC,MAAQ,CACJC,gBAAgB,G,EAEpBC,wBAA0B,WACtB,EAAKC,SAAS,CAACF,gBAAgB,K,EAGnCG,wBAA0B,WACtB,EAAKD,UAAS,SAACH,GACX,MAAO,CAACC,gBAAiB,EAAKD,MAAMC,oB,uDAMxC,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASH,oBAAqBO,KAAKD,0BACnC,kBAAC,EAAD,CACAV,OAAQW,KAAKH,wBACbT,KAAMY,KAAKL,MAAMC,iBACjB,0BAAM1B,UAAU,WACX8B,KAAKjC,MAAMC,e,GAvBXiC,a,eCsCNC,G,6KAtCP,IAAIC,EAAa,KAGjB,OAAOH,KAAKjC,MAAMqC,MACd,IAAK,eACDD,EAAa,yBAAKjC,UAAU,gBAC5B,MACJ,IAAK,YACDiC,EACI,yBAAKjC,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAGvB,MACJ,IAAK,OACDiC,EAAa,yBAAKjC,UAAU,SAC5B,MACJ,IAAK,SACDiC,EAAa,yBAAKjC,UAAU,WAC5B,MACJ,IAAK,QACDiC,EAAa,yBAAKjC,UAAU,UAC5B,MACJ,IAAK,QACDiC,EAAa,yBAAKjC,UAAU,UAC5B,MACJ,QACIiC,EAAa,KAErB,OAAOA,M,GAhCgBF,cCuBhB3B,G,MAtBA,SAACP,GACZ,IAAIsC,EAAyBC,OAAOC,KAAKxC,EAAMyC,aAC1CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAM5C,EAAMyC,YAAYE,KAAaD,KAAI,SAACG,EAAEC,GACnD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAYG,EAAGT,KAAMM,UAG1DK,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACpB,IAIN,OAHqC,IAAlCZ,EAAuBc,SACtBd,EAAyB,0DAGzB,yBAAKnC,UAAU,UACX,kBAAC,EAAD,CAAkBkC,KAAK,cACtBC,EACD,kBAAC,EAAD,CAAkBD,KAAK,oBCXpBgB,G,YARM,SAACrD,GAAD,OACjB,yBAAKG,UAAU,gBACX,yBAAKA,UAAU,SAASH,EAAMsD,OAC9B,4BAAQrC,QAASjB,EAAMuD,QAAUC,SAAUxD,EAAMwD,SAAUrD,UAAU,QAArE,QACA,4BAAQc,QAASjB,EAAMyD,MAAOtD,UAAU,QAAxC,WCHFuD,EAAW,CACb,CAACJ,MAAO,QAASjB,KAAM,SACvB,CAACiB,MAAO,QAASjB,KAAM,SACvB,CAACiB,MAAO,SAAUjB,KAAM,UACxB,CAACiB,MAAO,OAAQjB,KAAM,SAsBXsB,EAlBO,SAAC3D,GAAD,OAClB,yBAAKG,UAAU,iBACX,qCAAU,gCAASH,EAAM4D,MAAMC,QAAQ,KACtCH,EAAShB,KAAI,SAAAoB,GAAI,OACd,kBAAC,EAAD,CACAf,IAAKe,EAAKR,MACVA,MAAOQ,EAAKR,MACZG,MAAO,kBAAMzD,EAAM+D,gBAAgBD,EAAKzB,OACxCkB,QAAS,kBAAMvD,EAAMgE,kBAAkBF,EAAKzB,OAC5CmB,SAAUxD,EAAMwD,SAASM,EAAKzB,WAElC,4BACImB,UAAWxD,EAAMiE,YACjB9D,UAAU,cACVc,QAASjB,EAAMkE,SAHnB,WCDOC,G,MAjBD,SAACnE,GAAD,OACV,kBAAC,EAAD,KACI,kBAAC,EAAD,CACIgB,KAAMhB,EAAMgB,KACZE,QAASlB,EAAMoE,cACnB,yBACIjE,UAAU,QACVC,MAAO,CACHiE,UAAWrE,EAAMgB,KAAO,gBAAkB,qBAC1CsD,QAAStE,EAAMgB,KAAO,IAAM,MAE/BhB,EAAMC,aCDJsE,G,MAXA,SAACvE,GACZ,IAAMwE,EAAgB,UAAUxE,EAAMyE,QACtC,OACI,4BACAtE,UAAWqE,EACXvD,QAASjB,EAAMkB,QACfsC,SAAUxD,EAAMwD,UAAWxD,EAAMC,YCa1ByE,EApBM,SAAC1E,GAClB,IAAM2E,EAAoBpC,OAAOC,KAAKxC,EAAMyC,aAC3CC,KAAI,SAAAC,GACD,OAAO,wBAAII,IAAKJ,GAAW,0BAAMvC,MAAO,CAACwE,cAAc,eAAgBjC,GAAhE,KAAoF3C,EAAMyC,YAAYE,OAEjH,OACI,kBAAC,EAAD,KACI,6CACA,kDACA,4BACKgC,GAEL,2BAAG,0CAAgB3E,EAAM4D,MAAMC,QAAQ,KACvC,uCACA,kBAAC,EAAD,CAAQY,QAAQ,SAASvD,QAASlB,EAAM6E,mBAAxC,UACA,kBAAC,EAAD,CAAQJ,QAAQ,UAAUvD,QAASlB,EAAM8E,mBAAzC,c,QCXGC,E,OALEC,EAAMC,OAAO,CAC1BC,QAAS,sDCIEC,G,MAJC,kBACZ,yBAAKhF,UAAU,UAAf,gBCwCWiF,EAvCU,SAACC,EAAiBL,GACvC,mNACIpD,MAAQ,CACJ0D,MAAO,MAFf,EAmBIC,sBAAwB,WACpB,EAAKxD,SAAS,CAACuD,MAAM,QApB7B,kEAIwB,IAAD,OACfrD,KAAKuD,mBAAqBR,EAAMS,aAAaC,QAAQC,KAAI,SAAAC,GAErD,OADA,EAAK7D,SAAS,CAACuD,MAAO,OACfM,KAEX3D,KAAK4D,oBAAsBb,EAAMS,aAAaK,SAASH,KAAI,SAAAG,GAAQ,OAAIA,KAAU,SAAAR,GAC7E,EAAKvD,SAAS,CAACuD,MAAOA,SAVlC,6CAeQN,EAAMS,aAAaC,QAAQK,MAAM9D,KAAKuD,oBACtCR,EAAMS,aAAaK,SAASC,MAAM9D,KAAK4D,uBAhB/C,+BAwBQ,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACA7E,KAAMiB,KAAKL,MAAM0D,MACjBpE,QAASe,KAAKsD,uBACTtD,KAAKL,MAAM0D,MAAQrD,KAAKL,MAAM0D,MAAMU,QAAU,MAEnD,kBAACX,EAAqBpD,KAAKjC,YA/B3C,GAAqBkC,c,QCSnB+D,E,4MACFrE,MAAQ,CACJsE,qBAAqB,EACrBC,SAAS,G,EAwBbC,gBAAkB,WACd,EAAKrE,SAAS,CAACmE,qBAAqB,K,EAGxCG,sBAAwB,WACpB,EAAKtE,SAAS,CAACmE,qBAAqB,K,EAGxCI,wBAA0B,WACtB,EAAKtG,MAAMuG,QAAQC,KAAK,c,+GAtBR/D,GAQhB,OAPYF,OAAOC,KAAKC,GACnBC,KAAI,SAAAC,GACF,OAAOF,EAAYE,MAErBK,QAAO,SAACyD,EAAKvD,GACV,OAAOuD,EAAMvD,IACd,GACM,I,+BAkBb,IAAMwD,EAAY,eACXzE,KAAKjC,MAAM2G,QAElB,IAAI,IAAI5D,KAAO2D,EACXA,EAAa3D,GAAO2D,EAAa3D,IAAQ,EAE7C,IAAI2B,EAAe,KAEfnE,EAAS,kBAAC,EAAD,MAwBb,OAvBG0B,KAAKjC,MAAM2G,SACVpG,EACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAQkC,YAAaR,KAAKjC,MAAM2G,SAChC,kBAAC,EAAD,CACI5C,gBAAiB9B,KAAKjC,MAAM4G,kBAC5B5C,kBAAmB/B,KAAKjC,MAAM6G,oBAC9BrD,SAAUkD,EACVzC,YAAahC,KAAK6E,oBAAoB7E,KAAKjC,MAAM2G,QACjD/C,MAAO3B,KAAKjC,MAAM4D,MAClBM,QAASjC,KAAKmE,mBAI1B1B,EAAe,kBAACqC,EAAD,CACXtE,YAAeR,KAAKjC,MAAM2G,OAC1B9B,kBAAmB5C,KAAKoE,sBACxBvB,kBAAmB7C,KAAKqE,wBACxB1C,MAAO3B,KAAKjC,MAAM4D,SAEvB3B,KAAKL,MAAMuE,UACVzB,EAAe,kBAAC,EAAD,OAGf,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAO1D,KAAMiB,KAAKL,MAAMsE,oBAAqB9B,YAAanC,KAAKoE,uBAC1D3B,GAELnE,O,GA7EY2B,aAiGb8E,eAdS,SAAApF,GACpB,MAAO,CACH+E,OAAS/E,EAAMa,YACfmB,MAAOhC,EAAMqF,eAIM,SAAAC,GACvB,MAAO,CACHN,kBAAmB,SAACO,GAAD,OAAUD,EAAS,CAAC7E,KC3GjB,iBD2GmD+E,eAAgBD,KACzFN,oBAAqB,SAACM,GAAD,OAAUD,EAAS,CAAC7E,KC3GhB,oBD2GqD+E,eAAgBD,QAIvFH,CAA6C5B,EAAiBa,EAAcjB,IE1F5EqC,G,MAjBS,SAACrH,GACrB,OACI,yBAAKG,UAAU,mBACX,sDACA,yBAAKC,MAAO,CAACkH,MAAO,OAAOC,OAAQ,SAC/B,kBAAC,EAAD,CAAQ9E,YAAazC,EAAMyC,eAE/B,kBAAC,EAAD,CACAgC,QAAQ,SACRvD,QAASlB,EAAMwH,mBAFf,UAGA,kBAAC,EAAD,CACA/C,QAAQ,UACRvD,QAASlB,EAAMyH,mBAFf,e,QCsCGC,G,YAlDD,SAAC1H,GAEX,IAAI2H,EAAe,KACbC,EAAe,CAAC,gBAItB,OAHG5H,EAAM6H,SAAW7H,EAAM8H,gBAAkB9H,EAAM+H,SAC9CH,EAAapB,KAAK,WAEfxG,EAAMgI,aACT,IAAK,QACDL,EAAe,yCAAOxH,UAAWyH,EAAarG,KAAK,MAC/CvB,EAAMiI,cADK,CAEfC,MAAOlI,EAAMkI,MACbC,SAAUnI,EAAMoI,WAChB,MACJ,IAAM,WACFT,EAAe,4CAAUxH,UAAWyH,EAAarG,KAAK,MAClDvB,EAAMiI,cADK,CAEfC,MAAOlI,EAAMkI,MACbC,SAAUnI,EAAMoI,WAChB,MACJ,IAAK,SACDT,EACA,0CAAQxH,UAAWyH,EAAarG,KAAK,MACjCvB,EAAMiI,cADV,CAEAC,MAAOlI,EAAMkI,MACbC,SAAUnI,EAAMoI,UACXpI,EAAMiI,cAAcI,QAAQ3F,KAAI,SAAA4F,GAAM,OACnC,4BAAQvF,IAAKuF,EAAOJ,MAAOA,MAAOI,EAAOJ,OAAQI,EAAOC,kBAGhE,MACJ,QACIZ,EAAe,yCACfxH,UAAWyH,EAAarG,KAAK,MACzBvB,EAAMiI,cAFK,CAGfC,MAAOlI,EAAMkI,MACbC,SAAUnI,EAAMoI,WAMxB,OACI,yBAAKjI,UAAU,SACX,+BAAQH,EAAMsD,OACbqE,KCvCPa,E,4MACF5G,MAAQ,CACJ6G,UAAW,CACPtB,KAAM,CACFa,YAAa,QACbC,cAAe,CACX5F,KAAM,OACNqG,YAAa,aAEjBR,MAAO,GACPS,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPd,SAAS,GAEbe,OAAQ,CACJd,YAAa,QACbC,cAAe,CACX5F,KAAM,OACNqG,YAAa,kBAEjBR,MAAO,GACPS,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPd,SAAS,GAEbgB,IAAK,CACDf,YAAa,QACbC,cAAe,CACX5F,KAAM,OACNqG,YAAa,WACbM,QAAS,YAEbd,MAAO,GACPS,WAAY,CACRC,UAAU,EACVK,UAAW,EACXC,UAAW,GAEfL,OAAO,EACPd,SAAS,GAEboB,QAAS,CACLnB,YAAa,QACbC,cAAe,CACX5F,KAAM,OACNqG,YAAa,WAEjBR,MAAO,GACPS,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPd,SAAS,GAEbqB,MAAO,CACHpB,YAAa,QACbC,cAAe,CACX5F,KAAM,QACNqG,YAAa,uBAEjBR,MAAO,GACPS,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPd,SAAS,GAEbsB,eAAgB,CACZrB,YAAa,SACbC,cAAe,CACXI,QAAS,CACL,CAACH,MAAO,YAAYK,aAAc,aAClC,CAACL,MAAO,WAAWK,aAAc,cAGzCL,MAAO,YACPW,OAAO,EACPF,WAAY,KAGpBxC,SAAS,EACTmD,aAAa,G,EAGjBC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAK1H,SAAS,CAACoE,SAAS,IACxB,IAAMuD,EAAW,GACjB,IAAI,IAAIC,KAAe,EAAK/H,MAAM6G,UAC9BiB,EAASC,GAAe,EAAK/H,MAAM6G,UAAUkB,GAAazB,MAE9D,IAAM0B,EAAQ,CACVnH,YAAa,EAAKzC,MAAM2G,OACxB/C,MAAO,EAAK5D,MAAM4D,MAClBiG,UAAWH,GAGf1E,EAAM8E,KAAK,eAAeF,GACzBG,MAAK,SAAAjE,GACF,EAAK/D,SAAS,CAACoE,SAAS,IACxB,EAAKnG,MAAMuG,QAAQC,KAAK,QAE3BwD,OAAM,SAAA1E,GACH,EAAKvD,SAAS,CAACoE,SAAS,Q,EAKhC8D,oBAAsB,SAACT,EAAMU,GACzB,IAAMC,EAAW,eACV,EAAKvI,MAAM6G,WAEZ2B,EAAc,eACbD,EAAYD,IAEnBE,EAAelC,MAAQsB,EAAMa,OAAOnC,MACpCkC,EAAevB,MAAQ,EAAKyB,cAAcF,EAAelC,MAAMkC,EAAezB,YAC9EyB,EAAerC,SAAU,EACzBoC,EAAYD,GAAeE,EAC3B,IAAId,GAAc,EAClB,IAAI,IAAIiB,KAAmBJ,EACvBb,EAAca,EAAYI,GAAiB1B,OAASS,EAExD,EAAKvH,SAAS,CAAC0G,UAAW0B,EAAYb,YAAaA,K,4DAGzCpB,EAAMsC,GAChB,IAAIC,GAAU,EACd,OAAID,IAGDA,EAAK5B,WACJ6B,EAA2B,KAAjBvC,EAAMwC,QAAiBD,GAElCD,EAAKvB,YACJwB,EAAUvC,EAAM9E,QAAUoH,EAAKvB,WAAawB,GAE7CD,EAAKtB,YACJuB,EAAUvC,EAAM9E,QAAUoH,EAAKtB,WAAauB,GAEzCA,K,+BAIF,IAAD,OACEd,EAAc,GACpB,IAAI,IAAI5G,KAAOd,KAAKL,MAAM6G,UACtBkB,EAAYnD,KAAK,CACbmE,GAAI5H,EACJ6H,OAAQ3I,KAAKL,MAAM6G,UAAU1F,KAGrC,IAAI8H,EAAO,KAsBX,OApBIA,EADD5I,KAAKL,MAAMuE,QACH,kBAAC,EAAD,MAIH,0BAAM2E,SAAU7I,KAAKsH,cAChBI,EAAYjH,KAAI,SAAAiH,GAAW,OACxB,kBAAC,EAAD,CACA5G,IAAK4G,EAAYgB,GACjB3C,YAAa2B,EAAYiB,OAAO5C,YAChCC,cAAe0B,EAAYiB,OAAO3C,cAClCC,MAAOyB,EAAYiB,OAAO1C,MAC1BL,SAAU8B,EAAYiB,OAAO/B,MAC7Bf,eAAgB6B,EAAYiB,OAAOjC,WACnCZ,QAAS4B,EAAYiB,OAAO7C,QAC5BK,QAAS,SAACoB,GAAD,OAAW,EAAKS,oBAAoBT,EAAMG,EAAYgB,UAEnE,kBAAC,EAAD,CAAQlG,QAAQ,UAAUjB,UAAWvB,KAAKL,MAAM0H,aAAhD,WAKR,yBAAKnJ,UAAU,eACX,uDACK0K,O,GArLK3I,aAkMX8E,eAPS,SAAApF,GACpB,MAAO,CACH+E,OAAQ/E,EAAMa,YACdmB,MAAOhC,EAAMqF,cAIND,CAAyBwB,GCrMlCuC,E,4MAEFC,yBAA2B,WACvB,EAAKhL,MAAMuG,QAAQ0E,U,EAGvBC,yBAA2B,WACvB,EAAKlL,MAAMuG,QAAQ4E,QAAQ,2B,uDAK3B,OACI,6BACI,kBAAC,EAAD,CACA1I,YAAaR,KAAKjC,MAAM2G,OACxBa,kBAAmBvF,KAAK+I,yBACxBvD,kBAAmBxF,KAAKiJ,2BACxB,kBAAC,IAAD,CACAE,KAAMnJ,KAAKjC,MAAMqL,MAAMD,KAAO,gBAC9BE,UAAW9C,S,GApBJtG,aAkCR8E,eARS,SAAApF,GACpB,MAAO,CACH+E,OAAQ/E,EAAMa,eAMPuE,CAAyB+D,GCTzBnB,G,MA5BD,SAAC5J,GACX,IAAMyC,EAAc,GACpB,IAAI,IAAIL,KAAcpC,EAAMyC,YACxBA,EAAY+D,KAAK,CACbW,KAAM/E,EACNmJ,OAAQvL,EAAMyC,YAAYL,KAGlC,IAAMoJ,EAAmB/I,EAAYC,KAAI,SAAAN,GACrC,OAAO,0BACPhC,MAAO,CACHqL,cAAe,aACfC,QAAS,eACTnE,OAAQ,QACRoE,OAAQ,iBACRC,QAAS,OACb7I,IAAKX,EAAW+E,MAAO/E,EAAW+E,KAP3B,MAOoC/E,EAAWmJ,OAP/C,QAUX,OACI,yBAAKpL,UAAU,SACX,2CAAiBqL,GACjB,qCAAU,uCAAaxL,EAAM4D,MAAMC,QAAQ,QCkBxCuB,I,4MArCXxD,MAAQ,CACJiK,OAAQ,GACR1F,SAAS,G,kEAGO,IAAD,OACfnB,EAAM8G,IAAI,gBACT/B,MAAK,SAAAjE,GACF,IAAMiG,EAAO,GACb,IAAI,IAAIhJ,KAAO+C,EAASiG,KACpBA,EAAKvF,KAAL,eACOV,EAASiG,KAAKhJ,GADrB,CAEI4H,GAAI5H,KAGZ,EAAKhB,SAAS,CAACoE,SAAS,EAAM0F,OAAQE,OAEzC/B,OAAM,SAAA1E,GACH,EAAKvD,SAAS,CAACoE,SAAS,S,+BAM5B,OACI,6BACKlE,KAAKL,MAAMiK,OAAOnJ,KAAI,SAAAkH,GAAK,OACxB,kBAAC,EAAD,CACA7G,IAAK6G,EAAMe,GACXlI,YAAamH,EAAMnH,YACnBmB,MAAOgG,EAAMhG,gB,GA/BZ1B,aAsCkB8C,GClBxBgH,E,uKAfX,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,KAAK,YAAYE,UAAWP,IACnC,kBAAC,IAAD,CAAOK,KAAK,UAAUE,UAAWW,IACjC,kBAAC,IAAD,CAAOb,KAAK,IAAIE,UAAWrF,W,GATrB/D,aCKEgK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2D,oBCfAiB,EAAe,CACjB7J,YAAa,CACT8J,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVzF,WAAY,GAGV0F,EAAoB,CACtBJ,MAAO,GACPE,OAAQ,GACRC,KAAM,IACNF,MAAO,IA4BII,GAzBC,WAAkC,IAAjChL,EAAgC,uDAAxB0K,EAAaO,EAAW,uCAC7C,OAAOA,EAAOxK,MACV,ITtBsB,iBSuBlB,sBACOT,EADP,CAEIa,YAAY,eACLb,EAAMa,YADF,eAENoK,EAAOzF,eAAiBxF,EAAMa,YAAYoK,EAAOzF,gBAAkB,IAExEH,WAAYrF,EAAMqF,WAAa0F,EAAkBE,EAAOzF,kBAEhE,IT9ByB,oBS+BrB,sBACOxF,EADP,CAEIa,YAAY,eACLb,EAAMa,YADF,eAENoK,EAAOzF,eAAiBxF,EAAMa,YAAYoK,EAAOzF,gBAAkB,IAExEH,WAAYrF,EAAMqF,WAAa0F,EAAkBE,EAAOzF,kBAEhE,QACI,OAAOxF,IC/BbkL,GAAQC,YAAYH,IAEpBI,GACJ,kBAAC,IAAD,CAAUF,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAKNG,IAASC,OACPF,GACAG,SAASC,eAAe,SF6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxD,MAAK,SAAAyD,GACJA,EAAaC,gBAEdzD,OAAM,SAAA1E,GACLoI,QAAQpI,MAAMA,EAAMU,c","file":"static/js/main.503e0970.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger.2a7f4eda.png\";","\r\n\r\n\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burger from '../../assets/images/burger.png';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burger} alt=\"Broken Burger\"/>\r\n    </div>\r\n);\r\n\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName=\"active\">{props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer','Closed'];\r\n    if(props.open){\r\n        attachedClasses = ['SideDrawer','Open'];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses.join(' ')}>\r\n            <Logo height=\"11%\"/>\r\n            <nav>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div\r\n    className=\"DrawerToggle\" \r\n    onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <Logo height=\"80%\"/>\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\n\r\nexport default toolbar;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport './Layout.css';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\n\r\nclass layout extends Component{\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHanlder = () => {\r\n        this.setState((state) => {\r\n            return {showSideDrawer: !this.state.showSideDrawer}\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHanlder}/>\r\n                <SideDrawer \r\n                closed={this.sideDrawerClosedHandler}\r\n                open={this.state.showSideDrawer}/>\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case('meat'):\r\n                ingredient = <div className=\"Meat\"></div>;\r\n                break;\r\n            case('cheese'):\r\n                ingredient = <div className=\"Cheese\"></div>;\r\n                break;\r\n            case('bacon'):\r\n                ingredient = <div className=\"Bacon\"></div>;\r\n                break;\r\n            case('salad'):\r\n                ingredient = <div className=\"Salad\"></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","\r\nimport React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport './Burger.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(ingredKey => {\r\n            return [...Array(props.ingredients[ingredKey])].map((_,i) => {\r\n                return <BurgerIngredient key={ingredKey + i} type={ingredKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        },[]);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>MMM.... Bread sandwich....</p>;\r\n    }\r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\">\r\n        <div className=\"Label\">{props.label}</div>\r\n        <button onClick={props.removed}  disabled={props.disabled} className=\"Less\">Less</button>\r\n        <button onClick={props.added} className=\"More\">More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <p>Total: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label} \r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() => props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button \r\n            disabled={!props.purchasable}\r\n            className=\"OrderButton\"\r\n            onClick={props.ordered}>Order</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport './Modal.css';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <Backdrop \r\n            show={props.show}\r\n            clicked={props.modalClosed}/>\r\n        <div \r\n            className=\"Modal\"\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\n\r\nexport default modal;","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst button = (props) => {\r\n    const fullClassname = \"Button \"+props.btnType;\r\n    return (\r\n        <button\r\n        className={fullClassname}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>{props.children}</button>\r\n    );\r\n}\r\n\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n    .map(ingredKey => {\r\n        return <li key={ingredKey}><span style={{textTransform:'capitalize'}}>{ingredKey}</span>: {props.ingredients[ingredKey]}</li>;\r\n    });\r\n    return(\r\n        <Aux>\r\n            <h3>Order Summary</h3>\r\n            <p>Burger Ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total: {props.price.toFixed(2)}</strong></p>\r\n            <p>Checkout</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>Continue</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://first-react-project-88d5a.firebaseio.com/'\r\n});\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent,axios) => {\r\n    return class extends Component{\r\n        state = {\r\n            error: null\r\n        }\r\n        componentDidMount(){\r\n            this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.responseInterceptor = axios.interceptors.response.use(response => response, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                    show={this.state.error}\r\n                    clicked={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        currentlyPurchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        // axios.get('https://first-react-project-88d5a.firebaseio.com/ingredients.json')\r\n        // .then(response => {\r\n        //     this.setState({ingredients: response.data});\r\n        // })\r\n        // .catch(error => {});\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum = Object.keys(ingredients)\r\n            .map(ingredKey => {\r\n               return ingredients[ingredKey]; \r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            } ,0);\r\n        return sum > 0;\r\n    }\r\n\r\n    \r\n\r\n    purchaseHanlder = () => {\r\n        this.setState({currentlyPurchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({currentlyPurchasing: false});\r\n    }\r\n\r\n    purchaseContinueHanlder = () => {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ingred\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n\r\n        let burger = <Spinner/>;\r\n        if(this.props.ingred){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ingred}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ingred)}\r\n                        price={this.props.price}\r\n                        ordered={this.purchaseHanlder}/>\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary \r\n                ingredients = {this.props.ingred}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHanlder}\r\n                price={this.props.price}/>;\r\n        }\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner />;\r\n        }\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.currentlyPurchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n               {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingred : state.ingredients,\r\n        price: state.totalPrice\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (name) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: name}),\r\n        onIngredientRemoved: (name) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: name})\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (withErrorHandler(BurgerBuilder,axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return(\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>Thank you, Come again!</h1>\r\n            <div style={{width: '100%',margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n            btnType=\"Danger\"\r\n            clicked={props.checkoutCancelled}>Cancel</Button>\r\n            <Button \r\n            btnType=\"Success\"\r\n            clicked={props.checkoutContinued}>Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [\"InputElement\"];\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(\"Invalid\")\r\n    }\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input className={inputClasses.join(' ')}\r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={inputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n            <select className={inputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n            </select>);\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"Input\">\r\n            <label>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )};\r\n\r\n\r\nexport default input;","import React,{ Component } from \"react\";\r\nimport axios from '../../../axios-orders';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport './ContactData.css';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass ContactData extends Component{\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {     \r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zip: {    \r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code',\r\n                    pattern: '[0-9]{5}'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'someone@example.com'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'overnight',displayValue: 'Overnight'},\r\n                        {value: 'standard',displayValue: 'Standard'}\r\n                    ]\r\n                },\r\n                value: 'overnight',\r\n                valid: true,\r\n                validation: {}\r\n            }\r\n        },\r\n        loading: false,\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        const formData = {};\r\n        for(let formElement in this.state.orderForm){\r\n            formData[formElement] = this.state.orderForm[formElement].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingred,\r\n            price: this.props.price,\r\n            orderData: formData\r\n            \r\n        };\r\n        axios.post('/orders.json',order)\r\n        .then(response => {\r\n            this.setState({loading: false});\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n\r\n    inputChangedHandler = (event,identifier) => {\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedElement = {\r\n            ...updatedForm[identifier]\r\n        };\r\n        updatedElement.value = event.target.value;\r\n        updatedElement.valid = this.checkValidity(updatedElement.value,updatedElement.validation);\r\n        updatedElement.touched = true;\r\n        updatedForm[identifier]  = updatedElement;\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedForm){\r\n            formIsValid = updatedForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedForm,formIsValid: formIsValid});\r\n    }\r\n\r\n    checkValidity(value,rule){\r\n        let isValid = true;\r\n        if(!rule){\r\n            return true;\r\n        }\r\n        if(rule.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rule.minLength){\r\n            isValid = value.length >= rule.minLength && isValid;\r\n        }\r\n        if(rule.maxLength){\r\n            isValid = value.length <= rule.maxLength && isValid;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n\r\n    render(){\r\n        const formElement = [];\r\n        for(let key in this.state.orderForm){\r\n            formElement.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = null;\r\n        if(this.state.loading){\r\n            form = <Spinner />;\r\n        }\r\n        else{\r\n            form = (\r\n                <form onSubmit={this.orderHandler}>\r\n                    {formElement.map(formElement => (\r\n                        <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType} \r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event,formElement.id)}/>\r\n                    ))}\r\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Submit</Button>\r\n                </form>\r\n            );\r\n        }\r\n        return(\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your contact info</h4>\r\n                    {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingred: state.ingredients,\r\n        price: state.totalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from '../../containers/Checkout/ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Checkout extends Component{\r\n\r\n    checkoutCancelledHandler = () =>{\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckoutSummary \r\n                ingredients={this.props.ingred}\r\n                checkoutCancelled={this.checkoutCancelledHandler}\r\n                checkoutContinued={this.checkoutContinuedHandler}/>\r\n                <Route \r\n                path={this.props.match.path + '/contact-data'} \r\n                component={ContactData}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingred: state.ingredients,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport './Order.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    for(let ingredient in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredient,\r\n            amount: props.ingredients[ingredient]})\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ingredient => {\r\n        return <span \r\n        style={{\r\n            testTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid #ccc',\r\n            padding: '5px'}}\r\n        key={ingredient.name}>{ingredient.name}  ({ingredient.amount})</span>;\r\n    });\r\n\r\n    return(\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default order;","import React,{ Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component{\r\n    state = {\r\n        orders: [],\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/orders.json')\r\n        .then(response => {\r\n            const data = [];\r\n            for(let key in response.data){\r\n                data.push({\r\n                    ...response.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            this.setState({loading: false,orders: data});\r\n        })\r\n        .catch(error => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders,axios);","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport {Route,Switch} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n\n  render(){\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout}/>\n            <Route path=\"/orders\" component={Orders}/>\n            <Route path=\"/\" component={BurgerBuilder}/>\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    totalPrice: 4\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter } from 'react-router-dom';\nimport {Provider } from 'react-redux';\nimport {createStore } from 'redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}