{"version":3,"sources":["store/actions/actionTypes.js","Shared/utility.js","hoc/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","axios-orders.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","assets/images/burger.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rule","isValid","required","trim","minLength","length","maxLength","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerFail","purchaseInit","fetchOrders","orders","key","push","fetchOrdersFail","authSuccess","UID","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","concat","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","err","setAuthRedirectPath","path","authCheckState","getItem","instance","create","baseURL","backdrop","show","className","onClick","clicked","modal","modalClosed","style","transform","opacity","button","fullClassname","btnType","disabled","spinner","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","this","requestInterceptor","interceptors","request","use","req","responseInterceptor","eject","message","Component","BurgerIngredient","ingredient","burger","transformedIngredients","Object","keys","map","ingredKey","Array","_","i","reduce","arr","el","module","exports","logo","height","src","alt","navigationItem","to","link","exact","activeClassName","navigationItems","isAuthenticated","sideDrawer","attachedClasses","open","Backdrop","closed","join","isAuth","drawerToggle","toolbar","drawerToggleClicked","layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHanlder","connect","buildControl","label","removed","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","orderSummary","ingredientSummary","textTransform","Button","purchaseCancelled","purchaseContinued","BurgerBuilder","currentlyPurchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ingred","Spinner","Burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSummary","Modal","burgerBuilder","totalPrice","redirectPath","authRedirectPath","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","Comp","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoLogin","routes","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedAddIngredient","updatedAddedIngredients","updatedRemoveIngredient","updatedRemovedIngredients","setIngredient","fetchIngredientsFailed","reducer","loading","purchased","purcased","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","fetchOrdersStart","fetchOrdersSuccess","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a19d7b68.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAILURE';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value,rule) => {\r\n    let isValid = true;\r\n    if(!rule){\r\n        return true;\r\n    }\r\n    if(rule.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n    if(rule.minLength){\r\n        isValid = value.length >= rule.minLength && isValid;\r\n    }\r\n    if(rule.maxLength){\r\n        isValid = value.length <= rule.maxLength && isValid;\r\n    }\r\n    return isValid;\r\n};","\r\n\r\n\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName :name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName :name\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://first-react-project-88d5a.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id,data) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: data\r\n    };\r\n};\r\n\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth='+token,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data,orderData));\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token) => {\r\n    return dispatch => {\r\n        axios.get('/orders.json?auth='+token)\r\n        .then(response => {\r\n            const data = [];\r\n            for(let key in response.data){\r\n                data.push({\r\n                    ...response.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrdersSuccess(data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchOrdersFail(error));\r\n        });\r\n    }\r\n    \r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token,UID) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        UID: UID\r\n    };\r\n};\r\n\r\n\r\nexport const authFail = () => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('UID');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        },expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email,password,isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        const apiKey = 'AIzaSyA4mqhAKCT_d245M2C3xgPIgXo96v0hzxI';\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=';\r\n        if(!isSignUp){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=';\r\n        }\r\n        axios.post(url.concat(apiKey),authData)\r\n        .then(response => {\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('token',response.data.idToken);\r\n            localStorage.setItem('expirationDate',expirationDate);\r\n            localStorage.setItem('UID',response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error));\r\n        });\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }\r\n            else{\r\n                const UID = localStorage.getItem('UID');\r\n                dispatch(authSuccess(token,UID));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n    };\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://first-react-project-88d5a.firebaseio.com/'\r\n});\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './Modal.css';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <Backdrop \r\n            show={props.show}\r\n            clicked={props.modalClosed}/>\r\n        <div \r\n            className=\"Modal\"\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\n\r\nexport default modal;","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst button = (props) => {\r\n    const fullClassname = \"Button \"+props.btnType;\r\n    return (\r\n        <button\r\n        className={fullClassname}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>{props.children}</button>\r\n    );\r\n}\r\n\r\n\r\nexport default button;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent,axios) => {\r\n    return class extends Component{\r\n        state = {\r\n            error: null\r\n        }\r\n        componentDidMount(){\r\n            this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.responseInterceptor = axios.interceptors.response.use(response => response, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                    show={this.state.error}\r\n                    clicked={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case('meat'):\r\n                ingredient = <div className=\"Meat\"></div>;\r\n                break;\r\n            case('cheese'):\r\n                ingredient = <div className=\"Cheese\"></div>;\r\n                break;\r\n            case('bacon'):\r\n                ingredient = <div className=\"Bacon\"></div>;\r\n                break;\r\n            case('salad'):\r\n                ingredient = <div className=\"Salad\"></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","\r\nimport React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport './Burger.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(ingredKey => {\r\n            return [...Array(props.ingredients[ingredKey])].map((_,i) => {\r\n                return <BurgerIngredient key={ingredKey + i} type={ingredKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        },[]);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>MMM.... Bread sandwich....</p>;\r\n    }\r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","module.exports = __webpack_public_path__ + \"static/media/burger.2a7f4eda.png\";","import React from 'react';\r\nimport burger from '../../assets/images/burger.png';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burger} alt=\"Broken Burger\"/>\r\n    </div>\r\n);\r\n\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName=\"active\">{props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated ? \r\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem> : \r\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer','Closed'];\r\n    if(props.open){\r\n        attachedClasses = ['SideDrawer','Open'];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses.join(' ')}>\r\n            <Logo height=\"11%\"/>\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div\r\n    className=\"DrawerToggle\" \r\n    onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <Logo height=\"80%\"/>\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\n\r\nexport default toolbar;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport './Layout.css';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport {connect} from 'react-redux';\r\n\r\nclass layout extends Component{\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHanlder = () => {\r\n        this.setState((state) => {\r\n            return {showSideDrawer: !this.state.showSideDrawer}\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                isAuth={this.props.isAuthenticated}\r\n                drawerToggleClicked={this.sideDrawerToggleHanlder}/>\r\n                <SideDrawer \r\n                closed={this.sideDrawerClosedHandler}\r\n                open={this.state.showSideDrawer}/>\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(layout);","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\">\r\n        <div className=\"Label\">{props.label}</div>\r\n        <button onClick={props.removed}  disabled={props.disabled} className=\"Less\">Less</button>\r\n        <button onClick={props.added} className=\"More\">More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <p>Total: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label} \r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() => props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button \r\n            disabled={!props.purchasable}\r\n            className=\"OrderButton\"\r\n            onClick={props.ordered}>{props.isAuth ? 'Order' : 'Login to Order'}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n    .map(ingredKey => {\r\n        return <li key={ingredKey}><span style={{textTransform:'capitalize'}}>{ingredKey}</span>: {props.ingredients[ingredKey]}</li>;\r\n    });\r\n    return(\r\n        <Aux>\r\n            <h3>Order Summary</h3>\r\n            <p>Burger Ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total: {props.price.toFixed(2)}</strong></p>\r\n            <p>Checkout</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>Continue</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import React, {Component} from 'react';\r\nimport axios from '../../axios-orders';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component{\r\n    state = {\r\n        currentlyPurchasing: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients(); \r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum = Object.keys(ingredients)\r\n            .map(ingredKey => {\r\n               return ingredients[ingredKey]; \r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            } ,0);\r\n        return sum > 0;\r\n    }\r\n\r\n    \r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({currentlyPurchasing: true});\r\n        }\r\n        else{\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({currentlyPurchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ingred\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Can't load ingredients</p> : <Spinner/>;\r\n        if(this.props.ingred){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ingred}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ingred)}\r\n                        price={this.props.price}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}/>\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary \r\n                ingredients = {this.props.ingred}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price}/>;\r\n        }\r\n        // if(this.state.loading){\r\n        //     orderSummary = <Spinner />;\r\n        // }\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.currentlyPurchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n               {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingred : state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        redirectPath: state.auth.authRedirectPath\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (name) => dispatch(actions.addIngredient(name)),\r\n        onIngredientRemoved: (name) => dispatch(actions.removeIngredient(name)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (withErrorHandler(BurgerBuilder,axios));","import React, {Component} from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Logout extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React, {Component} from 'react';\r\n\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component{\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount(){\r\n            importComponent()\r\n            .then(cmp => {\r\n                this.setState({component: cmp.default});\r\n            });\r\n        }\r\n\r\n\r\n        render () {\r\n            const Comp = this.state.component\r\n            return Comp ? <Comp {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport {Route,Switch,withRouter,Redirect} from 'react-router-dom';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.onTryAutoLogin();\n  }\n\n\n  render(){\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth}/>\n        <Route path=\"/\" component={BurgerBuilder}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated){\n      routes = (\n      <Switch>\n        <Route path=\"/checkout\" component={asyncCheckout}/>\n        <Route path=\"/orders\" component={asyncOrders}/>\n        <Route path=\"/logout\" component={Logout}/>\n        <Route path=\"/auth\" component={asyncAuth}/>\n        <Route path=\"/\" component={BurgerBuilder}/>\n        <Redirect to=\"/\"/>\n      </Switch>);\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n  \n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoLogin: () => dispatch(actions.authCheckState())\n  }\n};\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../Shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state,action) => {\r\n    const updatedAddIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n    const updatedAddedIngredients = updateObject(state.ingredients,updatedAddIngredient);\r\n    return updateObject(state,{\r\n        ingredients: updatedAddedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    });\r\n}\r\n\r\nconst removeIngredient = (state,action) => {\r\n    const updatedRemoveIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n    const updatedRemovedIngredients = updateObject(state.ingredients,updatedRemoveIngredient);\r\n    return updateObject(state,{\r\n        ingredients: updatedRemovedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    });\r\n}\r\n\r\nconst setIngredient = (state,action) => {\r\n    return updateObject(state,{\r\n        ingredients: action.ingredients,\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n}\r\n\r\nconst fetchIngredientsFailed = (state,action) => {\r\n    return updateObject(state,{\r\n        error: true\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state,action);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state,action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredient(state,action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../Shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state,action) => {\r\n    return updateObject(state,{purcased: false})\r\n}\r\n\r\nconst purchaseBurgerStart = (state,action) => {\r\n    return updateObject(state,{loading: true});\r\n}\r\n\r\nconst purchaseBurgerFail = (state,action) => {\r\n    return updateObject(state,{loading: false});\r\n\r\n}\r\nconst purchaseBurgerSuccess = (state,action) => {\r\n    const newOrder = updateObject(action.orderData,{id: action.orderId});\r\n    return updateObject(state,{\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder),\r\n        purchased: true\r\n    });\r\n}\r\n\r\nconst fetchOrdersStart = (state,action) => {\r\n    return updateObject(state,{loading: true});\r\n}\r\n\r\nconst fetchOrdersFail = (state,action) => {\r\n    return updateObject(state,{\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst fetchOrdersSuccess = (state,action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n           return purchaseBurgerSuccess(state,action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state,action);\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state,action);\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state,action);\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrdersStart(state,action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state,action);\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../Shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    UID: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state,action) => {\r\n    return updateObject(state,{error: null,loading: true});\r\n}\r\n\r\nconst authSuccess = (state,action) => {\r\n    return updateObject(state,{\r\n        token: action.token,\r\n        UID: action.UID,\r\n        error: null,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authFail = (state,action) => {\r\n    return updateObject(state,{\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nexport const authLogout = (state,action) => {\r\n    return updateObject(state, {token: null,UID: null});\r\n}\r\n\r\nexport const setAuthRedirectPath = (state,action) => {\r\n    return updateObject(state,{authRedirectPath: action.path});\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state,action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state,action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state,action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter } from 'react-router-dom';\nimport {Provider } from 'react-redux';\nimport {createStore, applyMiddleware,compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer,composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}